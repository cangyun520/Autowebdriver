------软件测试的7大原则
1、测试显示bug的存在
测试应用程序只能显示在应用程序中存在一个或多个缺陷，但是，仅仅通过测试并不能证明应用程序没有错误。因此，设计测试用例使其尽可能多的找到缺陷是很重要的。
2、穷举测试不可能
除非受测试应用（UAT）具有非常简单的逻辑结构和有限的输入，进行所有测试数据和场景的组合是不可能的事。出于这个原因，风险评估和优先级被用于集中测试最重要的方面。
3、尽早测试
我们越早开始测试活动，就越可以更好的利用可用的时间。当最初的产品，例如要求或设计文件完成后，我们就可以开始测试。测试阶段常会在开发周期的最后部分也就是开发完成之后遭到时间压缩。因此，尽早开始测试，我们可以针对开发生命周期的每个阶段进行测试的准备。另一个关于尽早测试的重要的一点是，当缺陷在生命周期中更早的被发现时，它们更容易解决而且成本更低。改变不正确的要求比起必须改变一个大型系统中没有按照要求或设计来工作的功能要成本低得多！
4、缺陷群
在测试过程中，可以观察到，大多数报告的缺陷都与少数几个系统内的模块有关。即少量模块包含了系统中大部分的缺陷。这也是帕雷托法则（二八定律）在软件测试方面的实际应用：约80％的问题被发现在20%的模块中。
5、杀虫剂悖论
如果持续运行同一套测试一遍又一遍，有可能那些测试用例就无法发现新的缺陷。因为随着系统的发展，许多以前报道的缺陷将会被修好，旧的测试用例就不再适用了。每当修复完缺陷或添加了新的功能后，我们需要做回归测试，以确保新更改的软件不破坏该软件的任何其他部分。然而，这些回归测试用例也需要根据软件本身的变化作出改变，使其能够更加适用并找到新的缺陷。
6、测试是上下文相关的
不同的测试方法，测试技术和测试类型是根据应用程序的类型和性质来决定的。例如，运用于医疗设备上的软件应用程序相比游戏软件需要进行更多的测试。更重要的是医疗设备软件需要基于风险测试，需要符合医疗行业监管以及可能的特殊测试设计技术。出于同样的原因，一个非常受欢迎的网站，需要经过严格的性能试验，以及功能性的测试，以确保性能不受服务器上的负载的影响。
7、无错谬误
只是因为测试没有发现软件中的任何缺陷，并不意味着该软件是随时可以发布的。被执行的测试，是否真的找到了大多数缺陷？或者，他们是否根据顾客需求设计检查软件是否满足要求？在发布软件之前，还需要考虑很多其他因素。

其他原则需要注意的是：
测试必须由独立的一方来完成。
    测试不应由该开发软件的人或者团队来执行，因为它们趋向于维护程序的正确性。
最佳人员配置。
    于测试需要高度的创造性和责任感，需要将人员正确地分配到各个设计，实施和分析测试案例， 测试数据和测试结果的岗位上去。
除了有效条件之外，也要对无效的和意想不到的输入条件进行测试。
    程序应该在无效情况下产生正确的消息并在有效情况下产生正确的结果。
保持测试过程中软件的静态。
    在对程序进行测试用例集的执行过程不能对程序进行修改。
尽可能提供预期的测试结果。
    测试文档的必要组成部分包括了预期结果的说明，即使提供这样的结果可能是不切实际的。
------Web系统的常用测试方法：
1. 页面链接检查：每一个链接是否都有对应的页面，并且页面之间切换正确。
2. 相关性检查：删除/增加一项会不会对其他项产生影响，如果产生影响，这些影响是否都正确。
3. 检查按钮的功能是否正确：如update、cancel、delete、save等功能是否正确。
4. 字符串长度检查：输入超出需求所说明的字符串长度的内容，看系统是否检查字符串长度，会不会出错。
5. 字符类型检查：在应该输入指定类型的内容的地方输入其他类型的内容(如在应该输入整型的地方输入其他字符类型)，看系统是否检查字符类型，会否报错。
6. 标点符号检查：输入内容包括各种标点符号，特别是空格、各种引号、回车键。看系统处理是否正确。
7. 中文字符处理：在可以输入中文的系统输入中文，看会否出现乱码或出错。
8. 检查带出信息的完整性：在查看信息和update信息时，查看所填写的信息是不是全部带出，带出信息和添加的是否一致。
9. 信息重复：在一些需要命名，且名字应该唯一的信息输入重复的名字或ID，看系统有没有处理，会否报错，重名包括是否区分大小写，以及在输入内容的前后输入空格，系统是否作出正确处理。
10. 检查删除功能：在一些可以一次删除多个信息的地方，不选择任何信息，按”delete”，看系统如何处理，会否出错;然后选择一个和多个信息，进行删除，看是否正确处理。
11. 检查添加和修改是否一致：检查添加和修改信息的要求是否一致，例如添加要求必填的项，修改也应该必填;添加规定为整型的项，修改也必须为整型。
12. 检查修改重名：修改时把不能重名的项改为已存在的内容，看是否处理，报错。同时，也要注意，会不会报和自己重名的错。
13. 重复提交表单：一条已经成功提交的纪录，back后再提交，看看系统是否做了处理。
14. 检查多次使用back键的情况：在有back的地方，back，回到原来页面，再back，重复多次，看会否出错。
15. search检查：在有search功能的地方输入系统存在和不存在的内容，看search结果是否正确。如果可以输入多个search条件，可以同时添加合理和不合理的条件，看系统处理是否正确。搜索英文状态下的单引号，看看出现什么情况。
16. 输入信息位置：注意在光标停留的地方输入信息时，光标和所输入的信息是否跳到别的地方。
17. 上传下载文件检查：上传下载文件的功能是否实现，上传文件是否能打开。对上传文件的格式有何规定，系统是否有解释信息，并检查系统是否能够做到。
18. 必填项检查：应该填写的项没有填写时系统是否都做了处理，对必填项是否有提示信息，如在必填项前加*
19. 快捷键检查：是否支持常用快捷键，如Ctrl+C Ctrl+V Backspace等，对一些不允许输入信息的字段，如选人，选日期对快捷方式是否也做了限制。
20. 回车键检查：在输入结束后直接按回车键，看系统处理如何，会否报错。易用性怎么样。
界面设计、界面易用性、功能、规范性、合理性、美观与协调性、菜单设置、独特性、快捷方式的组合、容错性考虑、多窗口的应用与系统资源。

------易用性细则： 
1.完成相同或相近功能的按钮用Frame框起来，常用按钮要支持快捷方式
2.完成同一功能或任务的元素放在集中位置，减少鼠标移动的距离
3.按功能将界面划分局域块，用Frame框括起来,并要有功能说明或标题
4.界面要支持键盘自动浏览按钮功能，即按Tab键的自动切换功能
5.界面上首先应输入的和重要信息的控件在Tab顺序中应当*前,位置也应放在窗口上较醒目的位置
6.同一界面上的控件数最好不要超过10个，多于10个时可以考虑使用分页界面显示
7.分页界面要支持在页面间的快捷切换，常用组合快捷键Ctrl+Tab 
8.默认按钮要支持Enter及选操作，即按Enter后自动执行默认按钮对应操作
9.可写控件检测到非法输入后应给出说明并能自动获得焦点
10.Tab键的顺序与控件排列顺序要一直，目前流行总体从上到下，同时行间从左到右的方式
11.复选框和选项框按选择几率的高底而先后排列
12.复选框和选项框要有默认选项，并支持Tab选择
14.界面空间较小时使用下拉框而不用选项框
13.选项数相同时多用选项框而不用下拉列表框
15.选项数叫少时使用选项框，相反使用下拉列表框
16.专业性强的软件要使用相关的专业术语，通用性界面则提倡使用通用性词眼

Online Box系统硬件配置参考

微小规模配置参考：
Online使用用户数小于30人，并发用户数小于10人
操作系统：Microsoft Windows 2008 Server
数据库：Microsoft SQL Server 2008 (R1或R2)
应用软件：SAP Business One 和Online Box
产品名称
硬件组件
配置说明
数量
服务器
CPU
四核Intel Xeon E3系列
1
内存
8G
1
硬盘
SSD固态硬盘500G
1
带宽
5M

小规模配置参考：
Online使用用户数小于100人，并发用户数小于20人
操作系统：Microsoft Windows 2008 Server
数据库：Microsoft SQL Server 2008 (R1或R2)
应用软件：SAP Business One 和Online Box
产品名称
硬件组件
配置说明
数量
服务器
CPU
四核Intel Xeon E3系列
1
内存
12G
1
硬盘
SSD固态硬盘500G
1
带宽
8M

中规模配置参考：
Online使用用户数小于200人，并发用户数小于40人
操作系统：Microsoft Windows 2008 Server
数据库：Microsoft SQL Server 2008 (R1或R2)
应用软件：SAP Business One 和Online Box
产品名称
硬件组件
配置说明
数量
服务器
CPU
四核Intel Xeon E5系列
2
内存
16G
1
硬盘
SSD固态硬盘500G
2
带宽
10-15M

大规模配置参考：
Online使用用户数小于300人，并发用户数小于60人
操作系统：Microsoft Windows 2008 Server
数据库：Microsoft SQL Server 2008 (R1或R2)
应用软件：SAP Business One 和Online Box
产品名称
硬件组件
配置说明
数量
服务器
CPU
八核Intel Xeon E5系列
1-2
内存
16G
1-2
硬盘
SSD固态硬盘500G
2
带宽
15-20M

备注说明：
数据库服务器：通常安装SQL Server数据库和SAP Business One服务端；
Web策略： 如果用户数相对较多，需要将Online Box单独部署在Web服务器；
报表策略： 如果用户报表操作十分频繁，需要考虑将报表数据库部署独立服务器；
如果客户业务并发处理量很大，建议在数据库服务器使用固态硬盘或RAID配置，以便有效提升改善I/O读写性能；
若服务器性能良好又想进一步提高访问速度可以在IIS中启用动态和静态压缩机制；
若希望系统通过互联网外网方式也能访问，建议宽带的带宽为独享光纤10M以上；

Online冒烟测试定义：
功能按钮：
页面上每个按钮可正常点击，并正常触发对应事件
业务流/数据流：
增
    1. 只填写必填字段，最小数据可以正常添加
    2. 填写全部字段，最大数据可以正常添加
删
    1. 允许删除的数据可以被程序正常删除
    2. 不允许删除的数据不能被程序删除
改
    1. 不可以修改数据不能被改动
    2. 能修改数据可以被正常修改，并能正常保存
查
    1. 无特殊要求，增加的数据可查询到
    2. 无特殊要求，已删除数据查不到
    3. 无特殊要求，被屏蔽的数据查询不到
工作流：
    1. 有工作流单据支持流程发起，审批通过，驳回，终止

Online测试过程：
    1. 功能测试必须依据测试用例
    2. 测试提交用例交由开发，开发若不能完全执行，测试可拒收
    3. 测试接收开发提交功能后先进行冒烟测试，若冒烟测试不通过则直接打回
    4. 产品人员不得干涉测试方法，测试安排，测试进度
    5. 当测试A计划不能如期进行而改为测试B计划时，若产品或者开发需要测试重新执行测试A计划时则需发送告知高层，并由高层决定测试是否调整。
    6. 新增，变更需求时，产品人员需同步与开发，测试进行讲解
    7. 开发提交功能交付测试需同步提交Sql脚本，“Online_XXXX提交测试_bear_20160405.xlsm”文档，测试用例执行结果文档
    8. Sql脚本分为试图脚本，表脚本，数据升级脚本。表脚本不允许删除历史表字段
    9. Sql脚本前缀分别为 "Online_，B1_"
Online发版过程：
    1. 开发每周5下班前给产品进行周demo秀
    2. 月发版的最后4个工作日下班前，开发提交完所有自测通过的功能，若逾期则测试本月不再接收（插单任务延期提交需要sunny特批）
    3. 月底发版时产品需审查bug库中严重和高级bug并提交修改意见书
    4. 月发版的最后3天上午测试冒烟所有开发新提交功能，若不合格则打回，打回后测试本月不再接收